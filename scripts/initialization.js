mapboxgl.accessToken = mapbox_token; // token stored as variable in mapbox_token.js
var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/', // style url for basemap belongs here
    center: [-103.246, 59.501], // starting position [lng, lat]
    zoom: 2.9, // starting zoom
    minZoom: 1.5
});


//----------------------------------------------------------------------
// Callback function begins
// allow map to load before any actions occur
map.on('load', function () {
//---------------------------------------------------------------------
    // // Add controls to the map.
    // don't let the user tilt or spin the map
    map.dragRotate.disable();
    map.touchZoomRotate.disableRotation();

    // geocoder/searchbar
    var geocoder = new MapboxGeocoder({ // Initialize the geocoder
        accessToken: mapbox_token, // Set the access token
        mapboxgl: mapboxgl, // Set the mapbox-gl instance
        marker: false,
        flyTo: {
            zoom: 10,
            // These options control the flight curve, making it move
            // slowly and zoom out almost completely before starting
            // to pan.
            speed: 1, // make the flying slow
            curve: 1, // change the speed at which it zooms out
            // This can be any easing function: it takes a number between
            // 0 and 1 and returns another number between 0 and 1.
            easing: function (t) { return t; }
        },
        placeholder: 'Search your postal code',
        countries: 'ca' // search only witin Canada
    });

    // Add the geocoder to the map
    map.addControl(geocoder);

    // zoom and rotation 
    map.addControl(new mapboxgl.NavigationControl());
    
    //---------------------------------------------------------------------
    // add all sources from tileset to map
    add_sources(map);
    // and layers
    ada_layers(map);
    fed_layers(map);
    hover_layers(map);
    click_layers(map);
    food_bank_layer(map);
    food_basket_layer(map);
    //---------------------------------------------------------------------

    // Change the cursor style as a UI indicator for clickability
    map.on('mouseenter', 'fed_hover_fill', function () {
        map.getCanvas().style.cursor = 'pointer';
    });

    map.on('mouseleave', 'fed_hover_fill', function () {
        map.getCanvas().style.cursor = '';
    });
    //---------------------------------------------------------------------
    // call hovering functions when mouse moves over layer
    map.on("mousemove", "fed_hover_fill", fed_hover_move);
    map.on("mouseleave", "fed_hover_fill", fed_hover_leave);

    map.on("mousemove", "ada_hover_fill", ada_hover_move);
    map.on("mouseleave", "ada_hover_fill", ada_hover_leave);
    //---------------------------------------------------------------------

    //---------------------------------------------------------------------
    // geocoder responses begins
    //---------------------------------------------------------------------
    // Listen for the `result` event from the Geocoder
    // `result` event is triggered when a user makes a selection
    //  feed result coordinates into funciton to select relevant polygon
    geocoder.on('result', function (e) {
        map.once('moveend', function () {

            //project to use (pixel xy coordinates instead of lat/lon for WebGL)
            var geocoder_point = map.project([e.result.center[0], e.result.center[1]]);

            var ada_searched = map.queryRenderedFeatures(geocoder_point, { 
                layers: ['ada_click_fill'] 
            });

            var fed_searched = map.queryRenderedFeatures(geocoder_point, {
                layers: ['fed_click_fill']
            });

            geocoder_searched(ada_searched, fed_searched);

        });
    });
    //---------------------------------------------------------------------
    // geocoder responses ends
    //---------------------------------------------------------------------

    //---------------------------------------------------------------------
    // when user clicks on map, call funcitons previously defined
    map.on('click', map_click);
    //---------------------------------------------------------------------

});